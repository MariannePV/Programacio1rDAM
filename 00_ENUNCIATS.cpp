/*
01PR01 - Fes un programa que demani l’edat d’una persona i ens digui si aquesta persona és major d’edat o no.
01PR02 - Fes un programa que calculi la longitud d’una circumferència a partir del radi. Declara també una constant per a PI
01PR03 - Fes un programa que demani un nombre a l'usuari i digui si el nombre és parell o no.
01PR04 - Fes un programa que demani 2 nombres a l'usuari i determini si són iguals o no.
01PR05 - validar que una dada entrada per l’usuari és major a 0. Si no és correcte, mostrar un missatge que informi de l’error.
01PR06 - Donat un caràcter llegit per teclat, decidir si és una lletra majúscula, una lletra minúscula o un número.
01PR07 - Donat un caràcter llegit per teclat, decidir si és una vocal. En el cas que sigui una vocal, decidir si és majúscula o minúscula.
01PR08 - Copia aquest codi que ens diu si un any és de traspàs o no. Executa’l i estudia’l per aprendre la seva lògica:
01PR09 - Fes un programa que demani dos nombres i que després surti un menú com aquest que ens demani triar l’opció.
		1. Sumar
		2. Multiplicar
		3. Restar
		4. Dividir
		Entra una opció
		Llavors, a partir de l’opció entrada i utilitzant un switch que ens faci l’operació demanada
02PR01 - Feu un programa que demani tres nombres i ens digui si han estat entrats de manera creixent o no.
02PR02 - Fes un programa que demani tres nombres i els ordeni de manera creixent.
02PR03 - Fes un programa que demani un nombres i que li apliqui un 10% de descompte si el número és major que 5000 i en cas contrari apliqui només un 5% de descompte. Mostreu el resultat del valor ja amb el descompte fet.
02PR04 - Fes un programa que demani dos nombres i ens digui si TOTS DOS són parells o no.
02PR05 - Fes un programa que demani dos nombres i ens digui si ALGUN D’ELLS és parell o no.
02PR06 - Fes un programa que guardi en una variable booleana si dos nombres entrats pel teclat són iguals o no. Llavors, a partir de la variable booleana, feu un if que digui si els nombres són iguals o no.
	(WHILE)
03PR01_01 - Llegir 2 nombres enters (N i M) introduïts per l'usuari, on N
03PR01_02 - Suma dels naturals fins al natural n, que serà llegit per teclat (1+2+3+...).
03PR01_03 - Donat un natural n>=1 llegit per teclat, mostrar per pantalla tots els nombres parells menors que n.
03PR01_04 - Donat un natural n>=1 llegit per teclat, mostrar per pantalla tots els nombres fins a n que siguin parells i múltiples de 7.
03PR01_05 - Donat un natural n>0 llegit per teclat, mostrar tots els seus divisors.
03PR01_06 - Donat un natural n>=1 llegit per teclat, mostrar per pantalla tots els quadrats perfectes menors que n.
03PR01_07 - Donat un natural n>=1 llegit per teclat, mostrar per pantalla tots els quadrats perfectes menors que n i que a més siguin parells.
03PR01_08 - Donat un natural n>0 llegit per teclat, dir si és un nombre primer (divisible per 1 i per ell mateix).
03PR02_01 - Donat un nombre natural n llegit pel teclat, mostrar tots els nombres de n fins a 1, en ordre decreixent.
03PR02_02 - Donat un nombre natural n llegit pel teclat, mostrar tots els nombres de 1 fins a n, i en files de 5
03PR02_03 - Donat un natural n llegit per teclat, ha d'escriure tots els nombres resultants de divisions successives entre 10.
03PR02_04 - Donat un natural n llegit per teclat, dir per quants dígits està format.
	(FOR)
04PR01 - Modificar l’exemple anterior per tal que al final de cada fila ens mostri la suma dels elements de la fila.
04PR02 - Fer un algorisme que donat un nombre n>0 mostri per pantalla (suposem n=5 en el següent exemple):
		1 = 1
		1 + 2 = 3
		1 + 2 + 3 = 6
		1 + 2 + 3 + 4 = 10
		1 + 2 + 3 + 4 + 5 = 15
04PR03 - Fer un algorisme usant un bucle per i un mentre on es mostri per pantalla de major a menor tots els nombres parells del 5000 al 2 i a més per cada un ens informi de la suma dels seus dígits.
	(DO WHILE)
05PR01 - Suma dels naturals 1 fins al natural n, que serà llegit per teclat (1+2+3+...).
05PR02 - Donat un natural n llegit per teclat, dir per quants dígits està format
05PR03 - Donat un natural n>0 llegit per teclat, mostrar tots els seus divisors.
05PR04 - Donat un natural n>0 llegit per teclat, dir si és un nombre primer.
05PR05 - Donat un natural n, mostrar la suma dels seus dígits.
06PR01 - PR0301 Utilitzant un bucle fes que un dels programes que has fet a la practica anterior tingui un menú que demani si es vol continuar o no.
06PR02 - PR0302 Utilitzant un bucle fes una validació d’entrada de manera que ens permeti entrar l’edat d’un treballador que s’ha de trobar entre 16 i 67 anys.
06PR03 - PR0303 Feu un programa que ens digui si alguna de les xifres d’un nombre és parell o no.
06PR04 - PR0304 Feu un programa que ens digui quantes xifres d’un nombre són un nombre parell.
06PR05 - PR0305 Utilitzant una variables booleana feu un programa que ens digui si les xifres d’un nombre estan ordenades de forma creixent.
06PR06 - PR0306 Feu un programa que ens sumi totes les xifres parells d’un nombre
07PR01 - Feu un programa que faci una validació d’entrada de manera que no permeti entrar un número inferior a zero.
07PR02 - Feu un programa que faci una validació d’entrada de manera que s’hagi d’entrar un valor entre 1 i 4 (ambdós inclosos)
07PR03 - Recordeu el programa que vam fer per sumar, restar, multiplicar i dividir dos nombres? Modifiqueu aquest programa que era el núm 3 de l’activitat de manera que no surti del programa fins que s’hagi posat la opció 0. Tampoc ha de deixar entrar una opció que no sigui un valor entre 0 i 4
		1. Sumar
		2. Restar
		3. Multiplicar
		4. Dividir
		0. Sortir
07PR04 - Feu un programa que mostri tots els números senars o parells (a partir d’una opció que triï l’usuari) fins el valor que demani l’usuari. El programa ha de controlar tota l’estona que s’entri un valor enter 0 i 2. Per exemple si trio “Mostrar n senars” i entro 5 i 10 ha de mostrar Els senars entre aquests dos nombres són: 5,7,9
		1. Mostrar n senars
		2. Mostrar n parells
		0. Sortir del programa
07PR05 - Fes un programa que ens digui si un numero de 4 xifres conté o no el dígit 5.
07PR06 - Fes un programa que ens digui quants dígits 5 conté un número de 4 xifres.
07PR07 - Fes un programa que ens doni a triar si volem fer un quadrat, un triangle rectangle o una línia en diagonal. I ens demani la mida (el nombre d’asteriscos que han de sortir).
08PR01 - (for) Feu un programa al qual li entre un valor i ens ha de fer una fletxa a partir del nombre que li entrem. El programa ha de validar amb un do..while que el nombre que li entrem és senar. Per exemple si entrem un 7 ens farà això
08PR02 - (while) Feu un programa que capgiri un nombre. Si li entrem el 457 ens ha de sortir el 754. El programa ha de validar amb un do..while que el nombre que li entrem té, si més no, dues xifres.
08PR03 - (for) Feu un programa que trobi la Mitjana de les xifres d’un nombre de 4 xifres. El programa ha de validar amb un do..while que el nombre que li entrem té exactament 4 xifres.
08PR04 - (while) Feu un programa que ens digui si un nombre de 4 xifres és capicua o no. El programa ha de validar amb un do..while que el nombre que li entrem té exactament 4 xifres.
08PR05 - Feu un programa que ens demani aquestes dades de dos vehicles:
Definiu dues constants, una pel preu del gasoil i l’altra per a la gasolina. A partir d’aquestes dades feu una taula de simulació, com la que veieu (que és molt més llarga però no he volgut captura la pantalla fins a tantes línies) per tal de saber quan tenim amortitzat el fet de comprar un cotxe gasoil o gasolina o un cotxe que gasta menys litres que un altre. La taula ha de parar quan arribi a 500.000 km o quan la diferència de l’import d’un cotxe i l’altre ha estat eixugada per l’import del combustible.

EXAMEN 2

09PR01 - Arrays01 Ompliu un array de 100 posicions amb números de 1 al 100 i després mostreu el seu contingut per
pantalla.
09PR02 - Arrays02 Ompliu un array de 100 posicions amb nombres aleatoris entre 1 i 50, mostreu-lo i després doneu
l’opció a l’usuari de cercar un cert nombre dintre de l’array. El programa ens ha de dir si el nombre existeix i
en quina posició s’ha trobat
09PR03 - Arrays03 Ompliu un array de 100 posicions amb nombres aleatoris entre 1 i 50, mostreu-lo i després doneu
l’opció a l’usuari de cercar un cert nombre dintre de l’array. El programa ens ha de dir quantes vegades s’ha
trobat aquest nombre
09PR04 - Arrays04 Feu un programa que sumi tots els elements d’un array
09PR05 - Arrays05 Feu un programa que trobi la mitjana dels elements d’un array
09PR06 - Ararys06 Feu un programa que capgiri un array
09PR07 - Arrays07 Feu un programa que ens digui si un array està ordenat de manera creixent o no
09PR08 - Arrays08 Ompliu un array de 100 posicions amb nombres aleatoris entre 1 i 50, mostreu-lo i després feu que
els nombres parells que té es copiïn en un array que es digui parells i que els nombres senars que té es
copiïn en un altre array que es digui senar. Finalment ha de mostrar els tres arrays resultants.
09PR09 - Arrays09 Feu un programa per a nombres naturals (enters positius majors que zero) amb el qual es puguin
fer altes, baixes, modificacions i consultes en un array. Primerament haureu d’inicialitzar tot l’array amb
zeros.
09PR010 - Arrays10 Feu un programa que ens digui si els valors d’un array són capicua o no.
10PR02 - Matrius01 Feu un programa que ompli de zeros tots els elements d’una matriu i que després amb un altre
bucle mostri el resultat per pantalla.
10PR03 - Matrius02 Feu un programa que ompli dos matrius amb nombres aleatoris i que després faci una suma de
las dos matrius en una tercera matriu.
10PR03 - Matrius03 Fes un programa que calculi la mitjana dels elements d’una matriu
10PR04 - Matrius04 Fes un programa que ens digui si en una matriu plena de nombres algun d’ells és primer
10PR05 - Matrius05 Fes un programa que ens mostri per pantalla tots els nombres primers que conté una matriu.
10PR06 - Matrius06 Fes un programa que guardi la suma de tots els elements de la fila de cada matriu en un array
unidimensional. La suma dels elements de la fila 0 la guardarem en la posició 0 de l’array, la suma dels
elements de la fila 1 la guardarem en la posició 1 de l’array, la suma dels elements de la fila 2 la guardarem
en la posició 2 de l’array i així successivament.
10PR07 - Matrius07 Fes un programa igual que l’anterior, amb la diferència de que hi guardarem la suma de les
columnes, no les de les files.
11PR01 - (strings01) Feu un programa que trobi si hi ha alguna lletra a en un string
11PR02 - (strings02) Feu un programa que trobi totes les lletres a que hi ha en un string
11PR03 - (strings03) Feu un programa que trobi un substring dintre d’un string i ens digui la
posició on s’ha trobat.
11PR04 - (strings04) Feu un programa que ens digui quantes vegades hi apareix un substring en
un string
11PR05 - (strings05) Feu un programa que a partir del signe * ens faci un salt de línia.
12PR01 - ESTRUCTURES (Enunciat en l'exercici)
UF2_01PR01 - (funcions11) Fes una funció que escrigui “hola, com va la vida” per pantalla. La funció
serà de tipus void, per tant no retorna res i no rep cap paràmetre. Comprova el seu
funcionament.
UF2_01PR02 - (funcions12) Fes una funció a la qual li passis com a paràmetre un nom, per exemple
Pepe, i ens mostri per pantalla “hola Pepe”. La funció no retorna res, per tant serà
void. Comprova el seu funcionament.
UF2_01PR03 - (funcions13) Fes una funció a la qual li passem un número per paràmetre i ens retorna
el doble d’aquest número. La funció es dirà doble i serà del tipus int ja que ens
retornarà un enter. Comprova el seu funcionament.
UF2_01PR04 - (funcions14) Fes una funció a la qual li passem dos números i mostra per pantalla la
seva suma. Els dos paràmetres que li passarem seran del tipus int i, com que la funció
no retornarà res ha de ser void. Comprova el seu funcionament.
UF2_01PR05 - (funcions15) Fes una funció a la qual li passem dos números i ens retorna la seva
suma. Els dos paràmetres que li passarem seran del tipus int i el retorn de la funció ha
de ser int també. Comprova el seu funcionament.
UF2_01PR06 - (funcions16) Fes una funció a la qual li passem un número i ens diu si el número és
primer o no. El paràmetre que li passem serà de tipus int i la funció retornarà un valor
booleà. Comprova el seu funcionament.
UF2_01PR07 - (funcions17) Fes una funció que mostri un menú del tipus:
1. Altes
2. Baixes
3. Modificacions
4. Consultes
I que retorni un valor numèric a partir de l’opció triada. La funció no ha de rebre cap
paràmetre.
UF2_01PR08 - (funcions18) Aquesta funció és totalment diferent a les anteriors, ja que és el propi
main qui rep paràmetres. Fes un programa principal main que rebi per paràmetre dos
nombres i ens digui quina és la suma. Si no se li passen dos valors ens ha de dir que els
paràmetres són incorrectes.
UF2_02PR01 - (Funcions21) Fes una funció que rebrà un nombre i ens retornarà el seu quadrat
UF2_02PR02 - (Funcions22) Fes una funció que rebrà un nombre i ens retornarà utilitzant el propi
paràmetre el seu quadrat.
UF2_02PR03 - (Funcions23) Fes una funció a la qual li passem tres nombres i ens els retorna ordenats
utilitzant els paràmetres.
UF2_02PR04 - (Funcions24) Fes una funció que rebi una taula i dos paràmetres i, ens retorni (a través
dels paràmetres) el valor més gran i el més petit de la taula.
UF2_02PR05 - (Funcions25) Fes una funció que rebi una taula i un nombre i ens retorni la funció cert
o fals de depenent de si s’ha trobat el nombre a dintre de la taula.
UF2_02PR06 - (Funcions26) Fes una funció igual que l’anterior però que la funció ens retorni la
posició on ha trobat l’element o un -1 en cas que no l’hagi trobat.
UF2_02PR07 - (Funcions27) Feu una funció swap (com la de les diapositives) a la qual li passem dos
números i ens els intercanvia. Això vol dir que els dos paràmetres que hem fet servir
per cridar la funció quedaran modificats.
UF2_02PR08 - (Funcions28) Fes una funció a la qual li passem una taula i ens la capgira. Aquesta
funció per intercanviar els valors farà servir la funció anterior. Vol dir que la funció
aquesta cridarà a la funció swap que heu fet abans.
UF2_03PR01 - (Funcions 31) Estructures. Manteniment d’una taula de clients.
Es tracta de fer tot un programa complet. No només una funció.
El programa haurà de tenir diverses funcions que vosaltres decidireu crear.
Les opcions que ens donarà el menú principal seran: (altes, baixes, modificacions i consultes) de manera que
cada element de la taula, en comptes de ser un nombre enter, sigui una estructura amb els següents camps:
DNI, nom, saldo.
Quan feu una alta heu de comprovar que no existeixi un client amb aquest DNI.
Vosaltres heu de triar les funcions que voleu fer.
Si més no, heu de fer les següents funcions: altes, baixes, modificar, consultes, cercar_per_DNI,
mostrar_client, menu_principal.
Vosaltres decidiu els paràmetres que voleu passar i el que retornen les funcions.
UF2_04PR01 - (Funcions 4.1) Tractament d’una taula amb punters. Feu un programa que capgiri un
array d'enters, però tot fet amb punters. Utilitzeu la notació de punter en comptes de la
notació de declaració de taules.
Haureu de fer una funció (o reutilitzar alguns que tingueu feta) per omplir-lo amb
aleatoris
Una funció que intercanviï dos valors
Una altra per capgirar-lo
Una altra per mostrar l’array que utilitzareu abans i després d'haver-lo capgirat.
UF2_04PR02 - (Funcions 4.2) Funció que retornar un punter. Feu una funció a la qual li enviem dos
nombres i ens ha de retornar la funció a través d’un punter la suma, i la multiplicació
dels dos nombres.
UF2_04PR03 - (Funcions 4.3) Funció que retorna un punter. Feu una funció a la qual li enviem una
taula de nombres enters i la funció ens retorna a través d’un punter el nombre major de
la taula, el nombre més petit i la mitjana dels valors de la taula.
UF2_05PR01 - (Funcions sobrecarregades) Feu un programa al qual li podem passar per paràmetre dos nombres o tres
nombres. Si li passem dos nombres els sumarà tots dos. Si li passem tres nombres els sumarà tots tres.
UF2_05PR02 - (Funcions sobrecarregades) Feu una funció a la qual li passem una taula de clients (amb els camps dni,
nom i saldo) i un altre camp que pot ser un enter o un string. La funció llistarà els clients per nom o per
saldo mínim a partir del que li enviem al segon paràmetre.
UF2_05PR03 - (Sobrecàrrega d’operadors) Construïu un operador sobrecarregat per tal de sumar dos temps expressats
en dies, hores i minuts. El resultat de la suma també ha de ser en dies hores i minuts.
Un cop tingueu l'operador fet feu una funció per entrar les dades del temps. Aquesta funció la farem servir per
entrar el temps1 i el temps2 i per tant se li haurà de passar l'estructura per referència i utilitzar l'operador ->
Després heu de fer una funció que mostri per pantalla un temps. Aquí se li passarà per valor i per tant farem
servir l'operador.
UF2_05PR04 - (Paràmetres per defecte) Feu una funció que ens mostrarà una taula que li passem. Per defecte aquesta
taula ens la mostrarà del dret, però si en un segon paràmetre li passem un true ens la mostrarà capgirada.
UF2_06PR01 - Fes una funció recursiva que trobi el factorial d’un nombre. Penseu que el factorial de
0 es 1, per tant el cas final serà quan num és igual a 0
UF2_06PR02 - Fes una funció recursiva que trobi el valor del terme n de Fibonacci.
Penseu que el cas final és quan es tracta d’un dels dos primers termes, o sigui quan n
és menor o igual a 2
UF2_06PR03 - Fes una funció recursiva que mostri per pantalla els dígits d’un numero invertits. Si
entrem el 438 ens ha de mostrar el 834
UF2_06PR04 - Fes una funció recursiva que ens mostri la suma dels elements d’un vector
UF2_06PR05 -  Fes una funció recursiva que ens mostri la suma dels dígits d’un nombre.
UF2_07PR01 -  Feu una funció recursiva que calculi un determinat terme n d’aquesta sèrie. És una
mena de Fibonacci però, en comptes de sumar dos dígits, en suma 3.
UF2_07PR02 -  Fes una funció recursiva que ens digui si una cadena de caràcters és palíndrom o no.
Una cadena és palíndrom si coincideix quan la capgirem. Per exemple “aeiiea” és
palíndrom. Penseu que li heu de passar la paraula i els índex de les posicions que vagi
comprovant, començant per tota la llargada i “anar reduint”.
UF2_07PR03 -  Feu una funció recursiva que calculi el resultat d’elevar un número a un exponent.
Penseu que un número elevat a 0 és 1 i per tant seria un cas final i que un número
elevat a 1 és ell mateix i per tant seria l’altre cas final.
UF2_07PR04 -  Fes una funció recursiva que inverteixi els dígits d’un número, de manera que la funció
valgui el nombre invertit.
UF2_07PR05 -  Fes una funció recursiva a la qual li entrem el dividend i el divisor i ens diu quin és el
quocient de la divisió (fent restes de manera recursiva)
UF2_08PR01 -  Fes una funció que ens digui si un element es troba dintre d’un array o no. Aquesta funció ha de
servir per a qualsevol tipus d’array.
UF2_08PR02 - Fes una funció que ens digui quantes vegades es troba un element dintre d’un array. Aquesta
funció ha de servir per a qualsevol tipus d’array.
UF2_08PR03 -  Fes un programa amb tres templates, una funció swap, una altra que capgiri un array i una altra
que mostri l’array (Aquest programa ha de servir per un array de qualsevol tipus)
UF2_08PR04 -  Fes una funció que faci la cerca del valor major i menor d’una taula. Aquests dos valors es
tornaran a través de dos paràmetres per referència. Aquesta funció ha de servir per a qualsevol
tipus d’array.
UF2_08PR05 -  Fes una funció que faci la cerca del valor major i menor d’una taula. Aquests dos valors es
tornaran a través d’un punter que retornarà la funció. Aquesta funció ha de servir per a qualsevol
tipus d’array.
UF3_01PR01 -
UF3_02PR01 -
UF3_03PR01 -
UF3_04PR01 -
UF4_01 - Partit de tenis. Farem un programa per controlar la puntuació d’un partit
de tenis.

UF4_02 - Creació d'una classe amb la definició en un fitxer header,
implementació dels mètodes en un cpp i implementació del main
en un altre cpp (cercle)

UF4_03 - Creació d'una classe on els atributs són objectes (dibuix)

UF4_04 - Atributs dinàmics

UF4_05 - Herència simple

*/
